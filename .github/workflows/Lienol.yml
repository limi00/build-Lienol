name: Lienol

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
        
env:
  REPO_URL: https://github.com/Lienol/openwrt.git
  REPO_BRANCH: 23.05
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  TZ: Asia/Shanghai
  DEVICE: xiaomi_mi-router-3g
  UPLOAD_OUTPUT: true

jobs:
   xiaomi_mi-router-3g:
    runs-on: ubuntu-22.04
    permissions:
      contents: write

    steps:
    - name: 配置
      uses: actions/checkout@main
    
    - name: 配置环境
      env:
          DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
        sudo -E apt-mark hold grub-efi-amd64-signed
        sudo -E apt update -y
        sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap* || true
        sudo -E apt full-upgrade -y
        sudo -E apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
                   bzip2 ccache clang cmake cpio curl device-tree-compiler ecj flex gawk gcc-multilib \
                   g++-multilib git gnutls-dev gperf haveged help2man intltool lib32gcc-s1 libc6-i386 libelf-dev \
                   libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses-dev \
                   libreadline-dev libssl-dev libpython3-dev libtool libyaml-dev libz-dev lld llvm lrzsz msmtp \
                   ninja-build p7zip p7zip-full patch pkgconf python3 python3 python3-ply python3-docutils \
                   python3-pyelftools qemu-utils re2c rsync scons squashfs-tools subversion swig texinfo uglifyjs \
                   upx-ucl unzip vim wget xmlto xxd zlib1g-dev zstd libfuse-dev gettext genisoimage python3-setuptools || true
        sudo -E systemctl daemon-reload
        sudo -E apt -y autoremove --purge
        sudo -E apt clean
      
    - name: 克隆源码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt


    - name: 配置 Feeds
      run: |
        cp -f $GITHUB_WORKSPACE/.config $GITHUB_WORKSPACE/openwrt/
        cd openwrt
        #sed -i '$a src-git smpackage https://github.com/kenzok8/small-package' feeds.conf.default
        #echo "src-git kiddin9 https://github.com/kiddin9/openwrt-packages.git" >> ./feeds.conf.default
        sed -i '1i src-git kenzo https://github.com/kenzok8/openwrt-packages' feeds.conf.default
        sed -i '2i src-git small https://github.com/kenzok8/small' feeds.conf.default
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        rm -rf feeds/luci/applications/luci-app-alist
        rm -rf package/feeds/luci/luci-app-alist

        ./scripts/feeds update -a && rm -rf feeds/luci/applications/luci-app-mosdns
        rm -rf feeds/packages/net/{alist,adguardhome,mosdns,xray*,v2ray*,v2ray*,sing*,smartdns}
        rm -rf feeds/packages/utils/v2dat
        rm -rf feeds/packages/lang/golang
        git clone https://github.com/kenzok8/golang feeds/packages/lang/golang
        
        cp -f $GITHUB_WORKSPACE/.config $GITHUB_WORKSPACE/openwrt/
        ./scripts/feeds install -a
 
    - name: 自定义设置
      run: |
        cd openwrt
        sed -i 's/192.168.1.1/192.168.31.1/g' package/base-files/files/bin/config_generate
        sed -i 's/OpenWrt/XiaoMi_R3G/g' package/base-files/files/bin/config_generate
        neofetch

    - name: 下载依赖
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 固件编译
      run: |
        cd openwrt
        make -j$(nproc)
        echo "FILE_DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name : 上传输出文件
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt firmware
        path: openwrt/bin
        
    - name: 整理输出文件
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
    
    - name: 发布固件至 Release
      uses: ncipollo/release-action@v1
      with:
        tag: "${{ env.DEVICE }}--${{ env.FILE_DATE }}"
        artifacts: "openwrt/bin/targets/*/*/*"
        body: |
          # 未测试×
          
          IP: 192.168.31.1 | Password: none
